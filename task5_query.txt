1. Find highly-rated movies (IMDB rating â‰¥ 9 with over 10,000 votes):

mongosh "mongodb+srv://edvin:edvin@cluster0.ggr14.mongodb.net/sample_mflix" --eval 'db.movies.find({ 
    "imdb.rating": { $gte: 9 }, 
    "imdb.votes": { $gt: 10000 } 
}, { 
    title: 1, 
    "imdb.rating": 1, 
    "imdb.votes": 1, 
    year: 1 
}).sort({"imdb.rating": -1}).limit(5)'

2. Find Christopher Nolan movies with high Rotten Tomatoes scores:

mongosh "mongodb+srv://edvin:edvin@cluster0.ggr14.mongodb.net/sample_mflix" --eval 'db.movies.find({ 
    "directors": "Christopher Nolan", 
    "tomatoes.critic.meter": { $gte: 85 } 
}, { 
    title: 1, 
    year: 1, 
    "tomatoes.critic.meter": 1 
}).sort({"tomatoes.critic.meter": -1})'

3. Find recent highly-rated sci-fi movies:

mongosh "mongodb+srv://edvin:edvin@cluster0.ggr14.mongodb.net/sample_mflix" --eval 'db.movies.find({ 
    genres: "Sci-Fi", 
    year: { $gte: 2010 }, 
    "imdb.rating": { $gte: 7.5 } 
}, { 
    title: 1, 
    year: 1, 
    "imdb.rating": 1 
}).sort({"imdb.rating": -1}).limit(5)'

4. Find most active users by comment count:

mongosh "mongodb+srv://edvin:edvin@cluster0.ggr14.mongodb.net/sample_mflix" --eval 'db.comments.aggregate([
    { 
        $group: { 
            _id: "$email", 
            total_comments: { $sum: 1 } 
        } 
    }, 
    { 
        $sort: { total_comments: -1 } 
    }, 
    { 
        $limit: 5 
    }
])'

5. Find award-winning movies (more than 50 wins and nominations):

mongosh "mongodb+srv://edvin:edvin@cluster0.ggr14.mongodb.net/sample_mflix" --eval 'db.movies.find({ 
    "awards.wins": { $gt: 50 }, 
    "awards.nominations": { $gt: 50 } 
}, { 
    title: 1, 
    year: 1, 
    awards: 1 
}).sort({"awards.wins": -1}).limit(5)'

Each query demonstrates different MongoDB features:
- Query 1: Uses comparison operators and sorting
- Query 2: Demonstrates searching by array elements and nested fields
- Query 3: Combines multiple conditions with projection
- Query 4: Shows aggregation pipeline usage
- Query 5: Works with nested document fields and complex sorting 